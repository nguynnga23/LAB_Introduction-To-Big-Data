version: '3.8'

services:
  airflow-webserver:
    image: apache/airflow:2.7.0
    container_name: airflow-webserver
    build:
      context: .
    environment:
      - AIRFLOW__CORE__EXECUTOR=${AIRFLOW__CORE__EXECUTOR}
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    networks:
      - airflow_network

  airflow-scheduler:
    image: apache/airflow:2.7.0
    container_name: airflow-scheduler
    build:
      context: .
    environment:
      - AIRFLOW__CORE__EXECUTOR=${AIRFLOW__CORE__EXECUTOR}
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      - AIRFLOW_UID=50000
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    user: "${AIRFLOW_UID:-50000}"
    command: ["airflow", "scheduler"]
    networks:
      - airflow_network

  # Python & Jupyter Notebook service
  jupyter:
    image: jupyter/base-notebook:latest
    container_name: jupyter
    environment:
      - JUPYTER_ENABLE_LAB=${JUPYTER_ENABLE_LAB}
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
    ports:
      - "8888:8888"
    volumes:
      - ./notebook:/home/jovyan/work
    networks:
      - airflow_network

  # PostgreSQL service
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./script/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - airflow_network

  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb:/data/db
      - ./script/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js  

    networks:
      - airflow_network

networks:
  airflow_network:
    driver: bridge
